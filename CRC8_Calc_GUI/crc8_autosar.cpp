#include "pch.h"
#include "crc8_autosar.h"

// This code assumes that unsigned is 4 bytes.

unsigned crc8autosar_bit(unsigned crc, void const *mem, size_t len) {
	unsigned char const *data = (unsigned char const *)mem;
	if (data == NULL)
		return 0;
	crc = ~crc;
	while (len--) {
		crc ^= *data++;
		for (unsigned k = 0; k < 8; k++)
			crc = crc & 0x80 ? (crc << 1) ^ 0x2f : crc << 1;
	}
	crc = ~crc;
	crc &= 0xff;
	return crc;
}

unsigned crc8autosar_rem(unsigned crc, unsigned val, unsigned bits) {
	crc = ~crc;
	val &= 0x100 - (0x100 >> bits);
	crc ^= val;
	while (bits--)
		crc = crc & 0x80 ? (crc << 1) ^ 0x2f : crc << 1;
	crc = ~crc;
	crc &= 0xff;
	return crc;
}

#define table_byte table_word[0]

static unsigned char const table_word[][256] = {
   {0xbd, 0x92, 0xe3, 0xcc, 0x01, 0x2e, 0x5f, 0x70, 0xea, 0xc5, 0xb4, 0x9b, 0x56,
	0x79, 0x08, 0x27, 0x13, 0x3c, 0x4d, 0x62, 0xaf, 0x80, 0xf1, 0xde, 0x44, 0x6b,
	0x1a, 0x35, 0xf8, 0xd7, 0xa6, 0x89, 0xce, 0xe1, 0x90, 0xbf, 0x72, 0x5d, 0x2c,
	0x03, 0x99, 0xb6, 0xc7, 0xe8, 0x25, 0x0a, 0x7b, 0x54, 0x60, 0x4f, 0x3e, 0x11,
	0xdc, 0xf3, 0x82, 0xad, 0x37, 0x18, 0x69, 0x46, 0x8b, 0xa4, 0xd5, 0xfa, 0x5b,
	0x74, 0x05, 0x2a, 0xe7, 0xc8, 0xb9, 0x96, 0x0c, 0x23, 0x52, 0x7d, 0xb0, 0x9f,
	0xee, 0xc1, 0xf5, 0xda, 0xab, 0x84, 0x49, 0x66, 0x17, 0x38, 0xa2, 0x8d, 0xfc,
	0xd3, 0x1e, 0x31, 0x40, 0x6f, 0x28, 0x07, 0x76, 0x59, 0x94, 0xbb, 0xca, 0xe5,
	0x7f, 0x50, 0x21, 0x0e, 0xc3, 0xec, 0x9d, 0xb2, 0x86, 0xa9, 0xd8, 0xf7, 0x3a,
	0x15, 0x64, 0x4b, 0xd1, 0xfe, 0x8f, 0xa0, 0x6d, 0x42, 0x33, 0x1c, 0x5e, 0x71,
	0x00, 0x2f, 0xe2, 0xcd, 0xbc, 0x93, 0x09, 0x26, 0x57, 0x78, 0xb5, 0x9a, 0xeb,
	0xc4, 0xf0, 0xdf, 0xae, 0x81, 0x4c, 0x63, 0x12, 0x3d, 0xa7, 0x88, 0xf9, 0xd6,
	0x1b, 0x34, 0x45, 0x6a, 0x2d, 0x02, 0x73, 0x5c, 0x91, 0xbe, 0xcf, 0xe0, 0x7a,
	0x55, 0x24, 0x0b, 0xc6, 0xe9, 0x98, 0xb7, 0x83, 0xac, 0xdd, 0xf2, 0x3f, 0x10,
	0x61, 0x4e, 0xd4, 0xfb, 0x8a, 0xa5, 0x68, 0x47, 0x36, 0x19, 0xb8, 0x97, 0xe6,
	0xc9, 0x04, 0x2b, 0x5a, 0x75, 0xef, 0xc0, 0xb1, 0x9e, 0x53, 0x7c, 0x0d, 0x22,
	0x16, 0x39, 0x48, 0x67, 0xaa, 0x85, 0xf4, 0xdb, 0x41, 0x6e, 0x1f, 0x30, 0xfd,
	0xd2, 0xa3, 0x8c, 0xcb, 0xe4, 0x95, 0xba, 0x77, 0x58, 0x29, 0x06, 0x9c, 0xb3,
	0xc2, 0xed, 0x20, 0x0f, 0x7e, 0x51, 0x65, 0x4a, 0x3b, 0x14, 0xd9, 0xf6, 0x87,
	0xa8, 0x32, 0x1d, 0x6c, 0x43, 0x8e, 0xa1, 0xd0, 0xff},
   {0xfa, 0x13, 0x07, 0xee, 0x2f, 0xc6, 0xd2, 0x3b, 0x7f, 0x96, 0x82, 0x6b, 0xaa,
	0x43, 0x57, 0xbe, 0xdf, 0x36, 0x22, 0xcb, 0x0a, 0xe3, 0xf7, 0x1e, 0x5a, 0xb3,
	0xa7, 0x4e, 0x8f, 0x66, 0x72, 0x9b, 0xb0, 0x59, 0x4d, 0xa4, 0x65, 0x8c, 0x98,
	0x71, 0x35, 0xdc, 0xc8, 0x21, 0xe0, 0x09, 0x1d, 0xf4, 0x95, 0x7c, 0x68, 0x81,
	0x40, 0xa9, 0xbd, 0x54, 0x10, 0xf9, 0xed, 0x04, 0xc5, 0x2c, 0x38, 0xd1, 0x6e,
	0x87, 0x93, 0x7a, 0xbb, 0x52, 0x46, 0xaf, 0xeb, 0x02, 0x16, 0xff, 0x3e, 0xd7,
	0xc3, 0x2a, 0x4b, 0xa2, 0xb6, 0x5f, 0x9e, 0x77, 0x63, 0x8a, 0xce, 0x27, 0x33,
	0xda, 0x1b, 0xf2, 0xe6, 0x0f, 0x24, 0xcd, 0xd9, 0x30, 0xf1, 0x18, 0x0c, 0xe5,
	0xa1, 0x48, 0x5c, 0xb5, 0x74, 0x9d, 0x89, 0x60, 0x01, 0xe8, 0xfc, 0x15, 0xd4,
	0x3d, 0x29, 0xc0, 0x84, 0x6d, 0x79, 0x90, 0x51, 0xb8, 0xac, 0x45, 0xfd, 0x14,
	0x00, 0xe9, 0x28, 0xc1, 0xd5, 0x3c, 0x78, 0x91, 0x85, 0x6c, 0xad, 0x44, 0x50,
	0xb9, 0xd8, 0x31, 0x25, 0xcc, 0x0d, 0xe4, 0xf0, 0x19, 0x5d, 0xb4, 0xa0, 0x49,
	0x88, 0x61, 0x75, 0x9c, 0xb7, 0x5e, 0x4a, 0xa3, 0x62, 0x8b, 0x9f, 0x76, 0x32,
	0xdb, 0xcf, 0x26, 0xe7, 0x0e, 0x1a, 0xf3, 0x92, 0x7b, 0x6f, 0x86, 0x47, 0xae,
	0xba, 0x53, 0x17, 0xfe, 0xea, 0x03, 0xc2, 0x2b, 0x3f, 0xd6, 0x69, 0x80, 0x94,
	0x7d, 0xbc, 0x55, 0x41, 0xa8, 0xec, 0x05, 0x11, 0xf8, 0x39, 0xd0, 0xc4, 0x2d,
	0x4c, 0xa5, 0xb1, 0x58, 0x99, 0x70, 0x64, 0x8d, 0xc9, 0x20, 0x34, 0xdd, 0x1c,
	0xf5, 0xe1, 0x08, 0x23, 0xca, 0xde, 0x37, 0xf6, 0x1f, 0x0b, 0xe2, 0xa6, 0x4f,
	0x5b, 0xb2, 0x73, 0x9a, 0x8e, 0x67, 0x06, 0xef, 0xfb, 0x12, 0xd3, 0x3a, 0x2e,
	0xc7, 0x83, 0x6a, 0x7e, 0x97, 0x56, 0xbf, 0xab, 0x42},
   {0xd1, 0xdf, 0xcd, 0xc3, 0xe9, 0xe7, 0xf5, 0xfb, 0xa1, 0xaf, 0xbd, 0xb3, 0x99,
	0x97, 0x85, 0x8b, 0x31, 0x3f, 0x2d, 0x23, 0x09, 0x07, 0x15, 0x1b, 0x41, 0x4f,
	0x5d, 0x53, 0x79, 0x77, 0x65, 0x6b, 0x3e, 0x30, 0x22, 0x2c, 0x06, 0x08, 0x1a,
	0x14, 0x4e, 0x40, 0x52, 0x5c, 0x76, 0x78, 0x6a, 0x64, 0xde, 0xd0, 0xc2, 0xcc,
	0xe6, 0xe8, 0xfa, 0xf4, 0xae, 0xa0, 0xb2, 0xbc, 0x96, 0x98, 0x8a, 0x84, 0x20,
	0x2e, 0x3c, 0x32, 0x18, 0x16, 0x04, 0x0a, 0x50, 0x5e, 0x4c, 0x42, 0x68, 0x66,
	0x74, 0x7a, 0xc0, 0xce, 0xdc, 0xd2, 0xf8, 0xf6, 0xe4, 0xea, 0xb0, 0xbe, 0xac,
	0xa2, 0x88, 0x86, 0x94, 0x9a, 0xcf, 0xc1, 0xd3, 0xdd, 0xf7, 0xf9, 0xeb, 0xe5,
	0xbf, 0xb1, 0xa3, 0xad, 0x87, 0x89, 0x9b, 0x95, 0x2f, 0x21, 0x33, 0x3d, 0x17,
	0x19, 0x0b, 0x05, 0x5f, 0x51, 0x43, 0x4d, 0x67, 0x69, 0x7b, 0x75, 0x1c, 0x12,
	0x00, 0x0e, 0x24, 0x2a, 0x38, 0x36, 0x6c, 0x62, 0x70, 0x7e, 0x54, 0x5a, 0x48,
	0x46, 0xfc, 0xf2, 0xe0, 0xee, 0xc4, 0xca, 0xd8, 0xd6, 0x8c, 0x82, 0x90, 0x9e,
	0xb4, 0xba, 0xa8, 0xa6, 0xf3, 0xfd, 0xef, 0xe1, 0xcb, 0xc5, 0xd7, 0xd9, 0x83,
	0x8d, 0x9f, 0x91, 0xbb, 0xb5, 0xa7, 0xa9, 0x13, 0x1d, 0x0f, 0x01, 0x2b, 0x25,
	0x37, 0x39, 0x63, 0x6d, 0x7f, 0x71, 0x5b, 0x55, 0x47, 0x49, 0xed, 0xe3, 0xf1,
	0xff, 0xd5, 0xdb, 0xc9, 0xc7, 0x9d, 0x93, 0x81, 0x8f, 0xa5, 0xab, 0xb9, 0xb7,
	0x0d, 0x03, 0x11, 0x1f, 0x35, 0x3b, 0x29, 0x27, 0x7d, 0x73, 0x61, 0x6f, 0x45,
	0x4b, 0x59, 0x57, 0x02, 0x0c, 0x1e, 0x10, 0x3a, 0x34, 0x26, 0x28, 0x72, 0x7c,
	0x6e, 0x60, 0x4a, 0x44, 0x56, 0x58, 0xe2, 0xec, 0xfe, 0xf0, 0xda, 0xd4, 0xc6,
	0xc8, 0x92, 0x9c, 0x8e, 0x80, 0xaa, 0xa4, 0xb6, 0xb8},
   {0x84, 0x31, 0xc1, 0x74, 0x0e, 0xbb, 0x4b, 0xfe, 0xbf, 0x0a, 0xfa, 0x4f, 0x35,
	0x80, 0x70, 0xc5, 0xf2, 0x47, 0xb7, 0x02, 0x78, 0xcd, 0x3d, 0x88, 0xc9, 0x7c,
	0x8c, 0x39, 0x43, 0xf6, 0x06, 0xb3, 0x68, 0xdd, 0x2d, 0x98, 0xe2, 0x57, 0xa7,
	0x12, 0x53, 0xe6, 0x16, 0xa3, 0xd9, 0x6c, 0x9c, 0x29, 0x1e, 0xab, 0x5b, 0xee,
	0x94, 0x21, 0xd1, 0x64, 0x25, 0x90, 0x60, 0xd5, 0xaf, 0x1a, 0xea, 0x5f, 0x73,
	0xc6, 0x36, 0x83, 0xf9, 0x4c, 0xbc, 0x09, 0x48, 0xfd, 0x0d, 0xb8, 0xc2, 0x77,
	0x87, 0x32, 0x05, 0xb0, 0x40, 0xf5, 0x8f, 0x3a, 0xca, 0x7f, 0x3e, 0x8b, 0x7b,
	0xce, 0xb4, 0x01, 0xf1, 0x44, 0x9f, 0x2a, 0xda, 0x6f, 0x15, 0xa0, 0x50, 0xe5,
	0xa4, 0x11, 0xe1, 0x54, 0x2e, 0x9b, 0x6b, 0xde, 0xe9, 0x5c, 0xac, 0x19, 0x63,
	0xd6, 0x26, 0x93, 0xd2, 0x67, 0x97, 0x22, 0x58, 0xed, 0x1d, 0xa8, 0x45, 0xf0,
	0x00, 0xb5, 0xcf, 0x7a, 0x8a, 0x3f, 0x7e, 0xcb, 0x3b, 0x8e, 0xf4, 0x41, 0xb1,
	0x04, 0x33, 0x86, 0x76, 0xc3, 0xb9, 0x0c, 0xfc, 0x49, 0x08, 0xbd, 0x4d, 0xf8,
	0x82, 0x37, 0xc7, 0x72, 0xa9, 0x1c, 0xec, 0x59, 0x23, 0x96, 0x66, 0xd3, 0x92,
	0x27, 0xd7, 0x62, 0x18, 0xad, 0x5d, 0xe8, 0xdf, 0x6a, 0x9a, 0x2f, 0x55, 0xe0,
	0x10, 0xa5, 0xe4, 0x51, 0xa1, 0x14, 0x6e, 0xdb, 0x2b, 0x9e, 0xb2, 0x07, 0xf7,
	0x42, 0x38, 0x8d, 0x7d, 0xc8, 0x89, 0x3c, 0xcc, 0x79, 0x03, 0xb6, 0x46, 0xf3,
	0xc4, 0x71, 0x81, 0x34, 0x4e, 0xfb, 0x0b, 0xbe, 0xff, 0x4a, 0xba, 0x0f, 0x75,
	0xc0, 0x30, 0x85, 0x5e, 0xeb, 0x1b, 0xae, 0xd4, 0x61, 0x91, 0x24, 0x65, 0xd0,
	0x20, 0x95, 0xef, 0x5a, 0xaa, 0x1f, 0x28, 0x9d, 0x6d, 0xd8, 0xa2, 0x17, 0xe7,
	0x52, 0x13, 0xa6, 0x56, 0xe3, 0x99, 0x2c, 0xdc, 0x69},
   {0x5f, 0xf2, 0x2a, 0x87, 0xb5, 0x18, 0xc0, 0x6d, 0xa4, 0x09, 0xd1, 0x7c, 0x4e,
	0xe3, 0x3b, 0x96, 0x86, 0x2b, 0xf3, 0x5e, 0x6c, 0xc1, 0x19, 0xb4, 0x7d, 0xd0,
	0x08, 0xa5, 0x97, 0x3a, 0xe2, 0x4f, 0xc2, 0x6f, 0xb7, 0x1a, 0x28, 0x85, 0x5d,
	0xf0, 0x39, 0x94, 0x4c, 0xe1, 0xd3, 0x7e, 0xa6, 0x0b, 0x1b, 0xb6, 0x6e, 0xc3,
	0xf1, 0x5c, 0x84, 0x29, 0xe0, 0x4d, 0x95, 0x38, 0x0a, 0xa7, 0x7f, 0xd2, 0x4a,
	0xe7, 0x3f, 0x92, 0xa0, 0x0d, 0xd5, 0x78, 0xb1, 0x1c, 0xc4, 0x69, 0x5b, 0xf6,
	0x2e, 0x83, 0x93, 0x3e, 0xe6, 0x4b, 0x79, 0xd4, 0x0c, 0xa1, 0x68, 0xc5, 0x1d,
	0xb0, 0x82, 0x2f, 0xf7, 0x5a, 0xd7, 0x7a, 0xa2, 0x0f, 0x3d, 0x90, 0x48, 0xe5,
	0x2c, 0x81, 0x59, 0xf4, 0xc6, 0x6b, 0xb3, 0x1e, 0x0e, 0xa3, 0x7b, 0xd6, 0xe4,
	0x49, 0x91, 0x3c, 0xf5, 0x58, 0x80, 0x2d, 0x1f, 0xb2, 0x6a, 0xc7, 0x75, 0xd8,
	0x00, 0xad, 0x9f, 0x32, 0xea, 0x47, 0x8e, 0x23, 0xfb, 0x56, 0x64, 0xc9, 0x11,
	0xbc, 0xac, 0x01, 0xd9, 0x74, 0x46, 0xeb, 0x33, 0x9e, 0x57, 0xfa, 0x22, 0x8f,
	0xbd, 0x10, 0xc8, 0x65, 0xe8, 0x45, 0x9d, 0x30, 0x02, 0xaf, 0x77, 0xda, 0x13,
	0xbe, 0x66, 0xcb, 0xf9, 0x54, 0x8c, 0x21, 0x31, 0x9c, 0x44, 0xe9, 0xdb, 0x76,
	0xae, 0x03, 0xca, 0x67, 0xbf, 0x12, 0x20, 0x8d, 0x55, 0xf8, 0x60, 0xcd, 0x15,
	0xb8, 0x8a, 0x27, 0xff, 0x52, 0x9b, 0x36, 0xee, 0x43, 0x71, 0xdc, 0x04, 0xa9,
	0xb9, 0x14, 0xcc, 0x61, 0x53, 0xfe, 0x26, 0x8b, 0x42, 0xef, 0x37, 0x9a, 0xa8,
	0x05, 0xdd, 0x70, 0xfd, 0x50, 0x88, 0x25, 0x17, 0xba, 0x62, 0xcf, 0x06, 0xab,
	0x73, 0xde, 0xec, 0x41, 0x99, 0x34, 0x24, 0x89, 0x51, 0xfc, 0xce, 0x63, 0xbb,
	0x16, 0xdf, 0x72, 0xaa, 0x07, 0x35, 0x98, 0x40, 0xed},
   {0xd2, 0x86, 0x7a, 0x2e, 0xad, 0xf9, 0x05, 0x51, 0x2c, 0x78, 0x84, 0xd0, 0x53,
	0x07, 0xfb, 0xaf, 0x01, 0x55, 0xa9, 0xfd, 0x7e, 0x2a, 0xd6, 0x82, 0xff, 0xab,
	0x57, 0x03, 0x80, 0xd4, 0x28, 0x7c, 0x5b, 0x0f, 0xf3, 0xa7, 0x24, 0x70, 0x8c,
	0xd8, 0xa5, 0xf1, 0x0d, 0x59, 0xda, 0x8e, 0x72, 0x26, 0x88, 0xdc, 0x20, 0x74,
	0xf7, 0xa3, 0x5f, 0x0b, 0x76, 0x22, 0xde, 0x8a, 0x09, 0x5d, 0xa1, 0xf5, 0xef,
	0xbb, 0x47, 0x13, 0x90, 0xc4, 0x38, 0x6c, 0x11, 0x45, 0xb9, 0xed, 0x6e, 0x3a,
	0xc6, 0x92, 0x3c, 0x68, 0x94, 0xc0, 0x43, 0x17, 0xeb, 0xbf, 0xc2, 0x96, 0x6a,
	0x3e, 0xbd, 0xe9, 0x15, 0x41, 0x66, 0x32, 0xce, 0x9a, 0x19, 0x4d, 0xb1, 0xe5,
	0x98, 0xcc, 0x30, 0x64, 0xe7, 0xb3, 0x4f, 0x1b, 0xb5, 0xe1, 0x1d, 0x49, 0xca,
	0x9e, 0x62, 0x36, 0x4b, 0x1f, 0xe3, 0xb7, 0x34, 0x60, 0x9c, 0xc8, 0xa8, 0xfc,
	0x00, 0x54, 0xd7, 0x83, 0x7f, 0x2b, 0x56, 0x02, 0xfe, 0xaa, 0x29, 0x7d, 0x81,
	0xd5, 0x7b, 0x2f, 0xd3, 0x87, 0x04, 0x50, 0xac, 0xf8, 0x85, 0xd1, 0x2d, 0x79,
	0xfa, 0xae, 0x52, 0x06, 0x21, 0x75, 0x89, 0xdd, 0x5e, 0x0a, 0xf6, 0xa2, 0xdf,
	0x8b, 0x77, 0x23, 0xa0, 0xf4, 0x08, 0x5c, 0xf2, 0xa6, 0x5a, 0x0e, 0x8d, 0xd9,
	0x25, 0x71, 0x0c, 0x58, 0xa4, 0xf0, 0x73, 0x27, 0xdb, 0x8f, 0x95, 0xc1, 0x3d,
	0x69, 0xea, 0xbe, 0x42, 0x16, 0x6b, 0x3f, 0xc3, 0x97, 0x14, 0x40, 0xbc, 0xe8,
	0x46, 0x12, 0xee, 0xba, 0x39, 0x6d, 0x91, 0xc5, 0xb8, 0xec, 0x10, 0x44, 0xc7,
	0x93, 0x6f, 0x3b, 0x1c, 0x48, 0xb4, 0xe0, 0x63, 0x37, 0xcb, 0x9f, 0xe2, 0xb6,
	0x4a, 0x1e, 0x9d, 0xc9, 0x35, 0x61, 0xcf, 0x9b, 0x67, 0x33, 0xb0, 0xe4, 0x18,
	0x4c, 0x31, 0x65, 0x99, 0xcd, 0x4e, 0x1a, 0xe6, 0xb2},
   {0xf5, 0x01, 0x32, 0xc6, 0x54, 0xa0, 0x93, 0x67, 0x98, 0x6c, 0x5f, 0xab, 0x39,
	0xcd, 0xfe, 0x0a, 0x2f, 0xdb, 0xe8, 0x1c, 0x8e, 0x7a, 0x49, 0xbd, 0x42, 0xb6,
	0x85, 0x71, 0xe3, 0x17, 0x24, 0xd0, 0x6e, 0x9a, 0xa9, 0x5d, 0xcf, 0x3b, 0x08,
	0xfc, 0x03, 0xf7, 0xc4, 0x30, 0xa2, 0x56, 0x65, 0x91, 0xb4, 0x40, 0x73, 0x87,
	0x15, 0xe1, 0xd2, 0x26, 0xd9, 0x2d, 0x1e, 0xea, 0x78, 0x8c, 0xbf, 0x4b, 0xec,
	0x18, 0x2b, 0xdf, 0x4d, 0xb9, 0x8a, 0x7e, 0x81, 0x75, 0x46, 0xb2, 0x20, 0xd4,
	0xe7, 0x13, 0x36, 0xc2, 0xf1, 0x05, 0x97, 0x63, 0x50, 0xa4, 0x5b, 0xaf, 0x9c,
	0x68, 0xfa, 0x0e, 0x3d, 0xc9, 0x77, 0x83, 0xb0, 0x44, 0xd6, 0x22, 0x11, 0xe5,
	0x1a, 0xee, 0xdd, 0x29, 0xbb, 0x4f, 0x7c, 0x88, 0xad, 0x59, 0x6a, 0x9e, 0x0c,
	0xf8, 0xcb, 0x3f, 0xc0, 0x34, 0x07, 0xf3, 0x61, 0x95, 0xa6, 0x52, 0xc7, 0x33,
	0x00, 0xf4, 0x66, 0x92, 0xa1, 0x55, 0xaa, 0x5e, 0x6d, 0x99, 0x0b, 0xff, 0xcc,
	0x38, 0x1d, 0xe9, 0xda, 0x2e, 0xbc, 0x48, 0x7b, 0x8f, 0x70, 0x84, 0xb7, 0x43,
	0xd1, 0x25, 0x16, 0xe2, 0x5c, 0xa8, 0x9b, 0x6f, 0xfd, 0x09, 0x3a, 0xce, 0x31,
	0xc5, 0xf6, 0x02, 0x90, 0x64, 0x57, 0xa3, 0x86, 0x72, 0x41, 0xb5, 0x27, 0xd3,
	0xe0, 0x14, 0xeb, 0x1f, 0x2c, 0xd8, 0x4a, 0xbe, 0x8d, 0x79, 0xde, 0x2a, 0x19,
	0xed, 0x7f, 0x8b, 0xb8, 0x4c, 0xb3, 0x47, 0x74, 0x80, 0x12, 0xe6, 0xd5, 0x21,
	0x04, 0xf0, 0xc3, 0x37, 0xa5, 0x51, 0x62, 0x96, 0x69, 0x9d, 0xae, 0x5a, 0xc8,
	0x3c, 0x0f, 0xfb, 0x45, 0xb1, 0x82, 0x76, 0xe4, 0x10, 0x23, 0xd7, 0x28, 0xdc,
	0xef, 0x1b, 0x89, 0x7d, 0x4e, 0xba, 0x9f, 0x6b, 0x58, 0xac, 0x3e, 0xca, 0xf9,
	0x0d, 0xf2, 0x06, 0x35, 0xc1, 0x53, 0xa7, 0x94, 0x60},
   {0x4b, 0x2f, 0x83, 0xe7, 0xf4, 0x90, 0x3c, 0x58, 0x1a, 0x7e, 0xd2, 0xb6, 0xa5,
	0xc1, 0x6d, 0x09, 0xe9, 0x8d, 0x21, 0x45, 0x56, 0x32, 0x9e, 0xfa, 0xb8, 0xdc,
	0x70, 0x14, 0x07, 0x63, 0xcf, 0xab, 0x20, 0x44, 0xe8, 0x8c, 0x9f, 0xfb, 0x57,
	0x33, 0x71, 0x15, 0xb9, 0xdd, 0xce, 0xaa, 0x06, 0x62, 0x82, 0xe6, 0x4a, 0x2e,
	0x3d, 0x59, 0xf5, 0x91, 0xd3, 0xb7, 0x1b, 0x7f, 0x6c, 0x08, 0xa4, 0xc0, 0x9d,
	0xf9, 0x55, 0x31, 0x22, 0x46, 0xea, 0x8e, 0xcc, 0xa8, 0x04, 0x60, 0x73, 0x17,
	0xbb, 0xdf, 0x3f, 0x5b, 0xf7, 0x93, 0x80, 0xe4, 0x48, 0x2c, 0x6e, 0x0a, 0xa6,
	0xc2, 0xd1, 0xb5, 0x19, 0x7d, 0xf6, 0x92, 0x3e, 0x5a, 0x49, 0x2d, 0x81, 0xe5,
	0xa7, 0xc3, 0x6f, 0x0b, 0x18, 0x7c, 0xd0, 0xb4, 0x54, 0x30, 0x9c, 0xf8, 0xeb,
	0x8f, 0x23, 0x47, 0x05, 0x61, 0xcd, 0xa9, 0xba, 0xde, 0x72, 0x16, 0xc8, 0xac,
	0x00, 0x64, 0x77, 0x13, 0xbf, 0xdb, 0x99, 0xfd, 0x51, 0x35, 0x26, 0x42, 0xee,
	0x8a, 0x6a, 0x0e, 0xa2, 0xc6, 0xd5, 0xb1, 0x1d, 0x79, 0x3b, 0x5f, 0xf3, 0x97,
	0x84, 0xe0, 0x4c, 0x28, 0xa3, 0xc7, 0x6b, 0x0f, 0x1c, 0x78, 0xd4, 0xb0, 0xf2,
	0x96, 0x3a, 0x5e, 0x4d, 0x29, 0x85, 0xe1, 0x01, 0x65, 0xc9, 0xad, 0xbe, 0xda,
	0x76, 0x12, 0x50, 0x34, 0x98, 0xfc, 0xef, 0x8b, 0x27, 0x43, 0x1e, 0x7a, 0xd6,
	0xb2, 0xa1, 0xc5, 0x69, 0x0d, 0x4f, 0x2b, 0x87, 0xe3, 0xf0, 0x94, 0x38, 0x5c,
	0xbc, 0xd8, 0x74, 0x10, 0x03, 0x67, 0xcb, 0xaf, 0xed, 0x89, 0x25, 0x41, 0x52,
	0x36, 0x9a, 0xfe, 0x75, 0x11, 0xbd, 0xd9, 0xca, 0xae, 0x02, 0x66, 0x24, 0x40,
	0xec, 0x88, 0x9b, 0xff, 0x53, 0x37, 0xd7, 0xb3, 0x1f, 0x7b, 0x68, 0x0c, 0xa0,
	0xc4, 0x86, 0xe2, 0x4e, 0x2a, 0x39, 0x5d, 0xf1, 0x95}
};

unsigned crc8autosar_byte(unsigned crc, void const *mem, size_t len) {
	unsigned char const *data = (unsigned char const *)mem;
	if (data == NULL)
		return 0;
	crc &= 0xff;
	while (len--)
		crc = table_byte[crc ^ *data++];
	return crc;
}

// This code assumes that integers are stored little-endian.

unsigned crc8autosar_word(unsigned crc, void const *mem, size_t len) {
	unsigned char const *data = (unsigned char const *)mem;
	if (data == NULL)
		return 0;
	crc &= 0xff;
	while (len && ((ptrdiff_t)data & 0x7)) {
		crc = table_byte[crc ^ *data++];
		len--;
	}
	if (len >= 8) {
		do {
			uintmax_t word = crc ^ *(uintmax_t const *)data;
			crc = table_word[7][word & 0xff] ^
				table_word[6][(word >> 8) & 0xff] ^
				table_word[5][(word >> 16) & 0xff] ^
				table_word[4][(word >> 24) & 0xff] ^
				table_word[3][(word >> 32) & 0xff] ^
				table_word[2][(word >> 40) & 0xff] ^
				table_word[1][(word >> 48) & 0xff] ^
				table_word[0][word >> 56];
			data += 8;
			len -= 8;
		} while (len >= 8);
	}
	while (len--)
		crc = table_byte[crc ^ *data++];
	return crc;
}
